name: Android Release
on:
  push:
    branches: [ "main" ]

  # allow manual trigger on actions tab
  workflow_dispatch:

# 4
jobs:
  # build & export artifact
  build:
    name: Create Android Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      # Set up environment variables for Gradle
      - name: Set up Gradle properties and environment
        run: |
          mkdir -p ~/.gradle
          echo "org.gradle.jvmargs=-Xmx4096M -XX:MaxMetaspaceSize=1024m -XX:+HeapDumpOnOutOfMemoryError" > ~/.gradle/gradle.properties
          echo "org.gradle.daemon=true" >> ~/.gradle/gradle.properties
          echo "org.gradle.parallel=true" >> ~/.gradle/gradle.properties
          echo "org.gradle.configureondemand=true" >> ~/.gradle/gradle.properties
        env:
          GRADLE_OPTS: "-Xmx4096m -XX:MaxMetaspaceSize=1024m"
          
      - name: Download Android keystore
        id: android_keystore
        uses: timheuer/base64-to-file@v1.0.3
        with:
          fileName: november-keystore.jks
          encodedString: ${{ secrets.KEYSTORE_BASE64 }}
      - name: Create key.properties
        run: |
          echo "storeFile=${{ steps.android_keystore.outputs.filePath }}" > android/key.properties
          echo "storePassword=${{ secrets.STORE_PASSWORD }}" >> android/key.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> android/key.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> android/key.properties
      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: "17.x"
          cache: 'gradle'
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.29.2"
          channel: 'stable'
          cache: true
      # 12
      - name: Get dependencies
        run: flutter pub get
        
      - name: Flutter clean
        run: flutter clean
        
      - name: Start release build
        run: |
          flutter build appbundle --release --verbose
        env:
          GRADLE_OPTS: "-Xmx4096m -XX:MaxMetaspaceSize=1024m"
      # 8
      - name: Upload Android Release
        uses: actions/upload-artifact@v4
        with:
          name: android-release
          path: build/app/outputs/bundle/release/app-release.aab
  
  # deploy to play store
  deploy:
    name: Deploy Android Build
    # required job build
    needs: build
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Get Android Build from artifacts
      uses: actions/download-artifact@v4
      with:
        name: android-release
    - name: Release Build to internal track
      uses: r0adkll/upload-google-play@v1
      with:
        serviceAccountJsonPlainText: ${{ secrets.PLAYSTORE_ACCOUNT_KEY }}
        packageName: com.november.game_note
        releaseFiles: app-release.aab
        # build open testing
        # track: beta
        # build production
        track: production
        status: completed

# name: Deploy

# on:
#   push:
#     branches: [ "main" ]
#   pull_request:
#     branches: [ "main" ]

# jobs:
#   distribute:
#     runs-on: ubuntu-latest

#     steps:
#       - uses: actions/checkout@v3

#       - uses: actions/setup-ruby@v1
#         with:
#           ruby-version: '2.6'
#       - name: Install bundle
#         run: |
#           bundle config path vendor/bundle
#           bundle install --jobs 4 --retry 3
      
#       - name: Download Android keystore
#         id: android_keystore
#         uses: timheuer/base64-to-file@v1.0.3
#         with:
#           fileName: november-keystore.jks
#           encodedString: ${{ secrets.KEYSTORE_BASE64 }}
#       - name: Create key.properties
#         run: |
#           echo "storeFile=${{ steps.android_keystore.outputs.filePath }}" > android/key.properties
#           echo "storePassword=${{ secrets.STORE_PASSWORD }}" >> android/key.properties
#           echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> android/key.properties
#           echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> android/key.properties
#       - uses: actions/setup-java@v3
#         with:
#           distribution: 'zulu'
#           java-version: "12.x"
#           cache: 'gradle'
#       - uses: subosito/flutter-action@v2
#         with:
#           flutter-version: "3.0.0"
#           channel: 'stable'
#           cache: true

#       - name: Create Google Play Config file
#         run : |
#           echo "$PLAY_CONFIG_JSON" > play_config.json.b64
#           base64 -d -i play_config.json.b64 > play_config.json
#         env:
#           PLAY_CONFIG_JSON: ${{ secrets.PLAYSTORE_ACCOUNT_KEY }}

#       - name: Distribute app to Beta track ðŸš€
#         run: bundle exec fastlane beta